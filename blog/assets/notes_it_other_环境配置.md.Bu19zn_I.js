import{ac as s,h as a,f as i,aC as n}from"./chunks/framework.DoD2GAWc.js";const g=JSON.parse('{"title":"环境配置","description":"","frontmatter":{},"headers":[],"relativePath":"notes/it/other/环境配置.md","filePath":"notes/it/other/环境配置.md","lastUpdated":1718610437000}'),e={name:"notes/it/other/环境配置.md"},l=n(`<h1 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h1><h2 id="使用nvm-node-version-manager-安装node-js" tabindex="-1">使用NVM（Node Version Manager）安装Node.js <a class="header-anchor" href="#使用nvm-node-version-manager-安装node-js" aria-label="Permalink to &quot;使用NVM（Node Version Manager）安装Node.js&quot;">​</a></h2><h3 id="windows" tabindex="-1">windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;windows&quot;">​</a></h3><ol><li>卸载node环境（若有），进入控制面板找到 <code>nodejs</code> 卸载。</li><li>下载 <code>nvm</code> <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">官网</a>下载 <code>mvn-setup.zip</code> 安装包。</li><li>进入安装根目录，打开命令行 cd 到该位置，执行 <code>nvm -v</code> 没有报nvm 命令不存在就表示安装成功。</li><li>重启电脑，在安装目录之外随便打开一个命令行，此时全局应该可以使用 nvm 命令了</li><li>执行 nvm ls available 查看可用的node包</li><li>执行 nvm install 14.15.4 开始安装v14.15.4版本</li><li>如果报 <code>Could not retrieve https://nodejs.org/dist/latest/SHASUMS256.txt.Get https://nodejs.org/dist/latest/SHASUMS256.txt: net/http: TLS handshake timeout</code> 这种错，说明出现远程连接被关闭的问题，这是由于国内网络限制导致的解决方法:可以将nvm中node和那npm设置到国内源,在nvm的安装路径下找到settings.txt(如果没有，可新建一个)打开:添加一下代码：<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>node_mirror:npm.taobao.org/mirrors/node/</span></span>
<span class="line"><span>npm_mirror:npm.taobao.org/mirrors/npm/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li>执行 <code>nvm install 10.15.3</code> 开始安装v10.15.3版本</li><li>执行 <code>nvm use 14.15.4</code>，先随便选择一个node版本</li><li>执行 <code>nvm ls</code> 看看当前已安装的nodejs列表，一定要有*号，表示当前使用的版本，如果没有 *，尝试执行 <code>nvm use</code> 再看</li><li>执行 <code>npm -v</code>，查看有没有npm，如果有npm，那么恭喜你完成，可以正常使用nvm</li><li>如果重启终端后就无法识别 <code>node</code> 指令的话，需要设置默认的 node 版本 <code>nvm alias default &lt;node_version&gt; </code>。</li></ol><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果安装完 <code>yarn</code> 后在 vscode 中运行 <code>yarn -v</code> 报错： <code>无法加载文件XXX\\npm\\yarn.ps1，因为在此系统上禁止运行脚本。</code> 在控制台执行：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行get-ExecutionPolicy，显示Restricted，表示状态是禁止的</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get-ExecutionPolicy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行：set-ExecutionPolicy RemoteSigned</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-ExecutionPolicy </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RemoteSigned</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 再次执行：get-ExecutionPolicy，就显示RemoteSigned</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get-ExecutionPolicy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这时就可以使用yarn了</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h3><p>根据手册步骤安装 <a href="https://github.com/nvm-sh/nvm#installing-and-updating" target="_blank" rel="noreferrer">nvm</a>。</p><p>步骤如下：</p><ol><li>下载 <code>nvm</code>：</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>进入 <code>~/</code> 目录，在 <code>~/.zshrc</code> 中的文件添加：</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$([ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot; ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.nvm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/nvm&quot;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="3"><li>新开一个终端后，运行 <code>nvm -v</code> ，如果仍然不能识别指令，输入 <code>source ~/.zshrc</code> 后重试。</li></ol><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果重启终端后就无法识别 <code>node</code> 指令的话，需要设置默认的 node 版本 <code>nvm alias default &lt;node_version&gt; </code></p></div><h3 id="nvm常用命令" tabindex="-1">NVM常用命令 <a class="header-anchor" href="#nvm常用命令" aria-label="Permalink to &quot;NVM常用命令&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出目前可用的远端 Node.js 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-remote</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安裝特定版本的 Node.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列出本地所安装的 Node.js 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 設定命令列預設開啟的 Node.js 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定使用的特定版本 Node.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="macos安装python" tabindex="-1">MacOS安装Python <a class="header-anchor" href="#macos安装python" aria-label="Permalink to &quot;MacOS安装Python&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>在一些例如安装了 <code>node-sass</code> 的项目中，<code>yarn install</code> 的时候可能报错 <code>Can‘t find Python executable “python“, you can set the PYTHON env variable</code>。</p><p>这是因为 <code>node-sass</code> 中使用了 <code>python</code>，而电脑里没有 <code>python</code>。</p></div><ol><li><p>下载地址：<a href="https://www.python.org/downloads/macos/" target="_blank" rel="noreferrer">https://www.python.org/downloads/macos/</a></p></li><li><p>安装完成后，使用 <code>python3 -V</code> 验证是否安装成功。</p></li><li><p>配置别名：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 \`~/.zshrc\` 中的文件添加：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/usr/bin/python3&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>以上做好后，需要 <code>重启终端/VSCode</code>。</p></li></ol>`,19),p=[l];function t(h,r,o,d,c,k){return i(),a("div",null,p)}const u=s(e,[["render",t]]);export{g as __pageData,u as default};
