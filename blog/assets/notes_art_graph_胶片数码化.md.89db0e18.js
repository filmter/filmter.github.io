import{_ as i,g as l,f as e,z as a}from"./app.3ae020bb.js";const p=JSON.parse('{"title":"哈苏fff文件处理","description":"","frontmatter":{},"headers":[{"level":2,"title":"fff转tiff","slug":"fff转tiff","link":"#fff转tiff","children":[]},{"level":2,"title":"去色罩","slug":"去色罩","link":"#去色罩","children":[]},{"level":2,"title":"特殊处理","slug":"特殊处理","link":"#特殊处理","children":[]},{"level":2,"title":"批量导出","slug":"批量导出","link":"#批量导出","children":[]}],"relativePath":"notes/art/graph/胶片数码化.md","lastUpdated":1679024374000}'),t={name:"notes/art/graph/胶片数码化.md"},f=a('<h1 id="哈苏fff文件处理" tabindex="-1">哈苏fff文件处理 <a class="header-anchor" href="#哈苏fff文件处理" aria-hidden="true">#</a></h1><h2 id="fff转tiff" tabindex="-1">fff转tiff <a class="header-anchor" href="#fff转tiff" aria-hidden="true">#</a></h2><ol><li>mac上直接改后缀名即可</li><li>win上使用flexcolor转换</li></ol><h2 id="去色罩" tabindex="-1">去色罩 <a class="header-anchor" href="#去色罩" aria-hidden="true">#</a></h2><ol><li>导入PS：把上一步中处理好的tiff文件导入ps</li><li>拷贝图层：这时候图像的高光阴影是反着的</li><li>反相：快捷键command+i <ol><li>这时候图像的高光阴影已经变得正常</li><li>但图像上面会笼罩一层蓝色，这层蓝色是底片片基的棕色反相后的产物，接下来要做的就是把它去掉。</li><li>打开色阶（command+l）： <ul><li>定义黑场：使用最左边的吸管工具，选择画面中最黑的地方（无曝光的画面与画面间隔的场景就可以）。这时候大部分的颜色已经出来了，但是画面上会有点灰灰的不够通透。</li><li>定义白场：吸取画面中最亮的部分。这需要一点经验来判断，一般衣服的高光、天空的太阳等，可以多尝试几次看看效果，对自己判断把握不足可以按住Alt显示高光辅助判断，也可以直接调整直方图右侧的高光滑块直至画面通透。</li><li>定义灰场：大部分情况下通过定义黑白场，胶片的颜色基本已经出来了，但是根据底片品类及拍摄场景的不同，画面呈现出来的状态不一定令人满意，这时候可以再用吸管定义一下灰场，直至得到一个满意的颜色。</li></ul></li></ol></li></ol><h2 id="特殊处理" tabindex="-1">特殊处理 <a class="header-anchor" href="#特殊处理" aria-hidden="true">#</a></h2><p>如果拍摄曝光均一、环境稳定的成片，在上面的步骤中已经可以得到一个满意的画面了。但是如果是随拍，一个胶卷中的场景变化较大、曝光不均一，批量调整是无法兼顾所有场景的，这时候我们就需要单一处理。</p><ol><li>选取画面：反相（command+i）后，使用选区工具（m）圈出画面部分，注意不要圈入画面周围的黑白边。</li><li>自动色调（command+shift+l）</li><li>自动颜色（command+shift+b）</li><li>这时就可以得到通透的画面了。在此基础上可以再进行微调，得到满意的画面效果。</li></ol><h2 id="批量导出" tabindex="-1">批量导出 <a class="header-anchor" href="#批量导出" aria-hidden="true">#</a></h2><ol><li>在上一步中调整后不要取消选区，通过点击【右键-通过拷贝的图层】，调整好的图片就复制到新的图层里了。</li><li>对所有的画面做好处理后，就可以看到图层面板中有n个新图层，选定这些图层后【右键-快速导出为png】就可以了。图层名即为文件名。</li></ol>',10),r=[f];function n(d,o,h,s,c,_){return e(),l("div",null,r)}const u=i(t,[["render",n]]);export{p as __pageData,u as default};
