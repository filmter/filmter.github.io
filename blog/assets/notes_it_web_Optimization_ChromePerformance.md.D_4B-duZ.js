import{_ as a,c as o,o as r,aO as t}from"./chunks/framework.CiAk_E0b.js";const c="/blog/assets/record.BFe3F5uo.gif",d="/blog/assets/%E9%87%8D%E5%A4%8D%E5%8A%A0%E8%BD%BD.Du56JPdW.gif",n="/blog/assets/iShot.CsYQCZzq.png",b=JSON.parse('{"title":"Chrome Performance","description":"","frontmatter":{},"headers":[],"relativePath":"notes/it/web/Optimization/ChromePerformance.md","filePath":"notes/it/web/Optimization/ChromePerformance.md","lastUpdated":1685956711000,"readingTime":{"words":336,"readTime":1}}'),i={name:"notes/it/web/Optimization/ChromePerformance.md"};function s(l,e,h,m,p,f){return r(),o("div",null,e[0]||(e[0]=[t('<h1 id="chrome-performance" tabindex="-1">Chrome Performance <a class="header-anchor" href="#chrome-performance" aria-label="Permalink to &quot;Chrome Performance&quot;">​</a></h1><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>在开发 <code>haida-webapp</code> 时，第一次加载 <code>luckysheet</code> 组件可以正常渲染，第二次加载浏览器会卡顿大概8秒才会有响应。 具体效果如下： <img src="'+c+'" alt="卡顿录屏" data-fancybox="gallery" loading="lazy"></p><h2 id="问题分析" tabindex="-1">问题分析 <a class="header-anchor" href="#问题分析" aria-label="Permalink to &quot;问题分析&quot;">​</a></h2><h3 id="排除接口耗时" tabindex="-1">排除接口耗时 <a class="header-anchor" href="#排除接口耗时" aria-label="Permalink to &quot;排除接口耗时&quot;">​</a></h3><p>根据录屏可看到，程序在进入新页面后，n个请求都在 <code>pending</code> 状态，但在接口成功请求后对应接口的耗时却都是毫秒级别。这里可以排除是接口耗时造成的。</p><h3 id="排查该问题时发现的另一个问题" tabindex="-1">排查该问题时发现的另一个问题 <a class="header-anchor" href="#排查该问题时发现的另一个问题" aria-label="Permalink to &quot;排查该问题时发现的另一个问题&quot;">​</a></h3><p>在排查本问题时，发现每次 <code>create</code> 组件都会往 <code>head</code> 中重复追加 <code>css</code> 以及 <code>js</code> 文件。如下图： <img src="'+d+'" alt="重复挂载" data-fancybox="gallery" loading="lazy"></p><p>这样会造成多次加载重复的资源，调试发现是 <code>luckysheet</code> 在最新版本的源码中每次 <code>create</code> 都会追加文件，但并没有在 <code>destroy</code> 的时候移除这些无用文件。</p><p>这是一个修复项，但并不是此次浏览器卡顿的原因。</p><h2 id="定位问题" tabindex="-1">定位问题 <a class="header-anchor" href="#定位问题" aria-label="Permalink to &quot;定位问题&quot;">​</a></h2><p>怀疑项都没能得到确认后，通过 <code>Chrome Performance</code> 进行性能分析来排查原因。</p><p><img src="'+n+'" alt="" data-fancybox="gallery" loading="lazy"></p><p>在上图中可以看到 <code>handleClearData</code> 方法耗时 <code>8.9s</code>，这显然是异常的，对应修复就可以啦。🎉</p>',14)]))}const u=a(i,[["render",s]]);export{b as __pageData,u as default};
